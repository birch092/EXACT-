

;File names that will hold the data
fn1='C:\Users\Cameron\Downloads\b_duration.dat'
fn2='C:\Users\Cameron\Downloads\c_duration.dat'
fn3='C:\Users\Cameron\Downloads\m_duration.dat'
fn4='C:\Users\Cameron\Downloads\x_duration.dat'

;Open/create the files
OPENW,1,fn1
OPENW,2,fn2
OPENW,3,fn3
OPENW,4,fn4

;Ask user for initial and final dates
;dd-mmm-yy == 01-jan-05 for example 
time1 = '01-jan-03'
time2 = '01-jan-04'
;read, time1, prompt = 'Please provide the initial date you wish (dd-mmm-yy):'
;read, time2, prompt = 'Please provide the final date you wish (dd-mmm-yy):'


;Pull GOES flare list
;/struct pulls it as a structure
;/class_decode converts GOES class to flux
a=ogoes()
gev = a->get_gev(time1,time2,/struct,/class_decode)

;Pulls the start and end times for the flare list
start = gev.gstart
finish =gev.gend

;Convert from 
start = anytim(start, /utime)
finish = anytim(finish, /utime)

		
;Determine number of flares and create an array to hold the flare durations
n = n_elements(start)
duration = fltarr(n)

;Calculate the duration of each flare
duration = finish - start

;Extract the GOES class information
class = gev.class


fn1='C:\Users\Cameron\Downloads\goes.info3'


;Open/create the files
OPENW,1,fn1
n=n-elements
for i-0, n=1, do printf, 1, class[i], duration[1]
close, 1
print, n





 